#version 450
layout (local_size_x = 16, local_size_y = 16) in;
layout(rgba8,set = 0, binding = 0) uniform image2D image;
layout( push_constant ) uniform constants
{
    vec4 data1;
    vec4 data2;
    vec4 data3;
    vec3 data4;
    highp uint time;
} PushConstants;

void main() {
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
    vec2 iResolution = imageSize(image);
    vec2 uv = vec2(pixel_coords) / vec2(iResolution);

    vec4 color;

    // Half green, half blue background
    if (uv.x < 0.5) {
        color = vec4(0.0, 1.0, 0.0, 1.0);  // Green
    } else {
        color = vec4(0.0, 0.0, 1.0, 1.0);  // Blue
    }

    // Yellow circles
    float aspect = float(iResolution.x) / float(iResolution.y);
    vec2 center = vec2(0.3, 0.3);
    float radius = 0.1;
    float dist = length((uv - center) * vec2(aspect, 1.0));
    float circle = smoothstep(radius, radius - 0.01, dist);

    // Animate circle position
    float t = PushConstants.time * 0.001;
    vec2 offset = vec2(sin(t) * 0.3, cos(t * 0.7) * 0.2);
    float animatedDist = length(((uv - center) - offset) * vec2(aspect, 1.0));
    float animatedCircle = smoothstep(radius, radius - 0.01, animatedDist);

    color = mix(color, vec4(1.0, 1.0, 0.0, 1.0), max(circle, animatedCircle));

    imageStore(image, pixel_coords, color);
}

